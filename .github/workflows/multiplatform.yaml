name: Manually triggered build of multiplatform test container

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'EUPS tag of input DM Pipelines Stack container'
        required: true
        default: ''
      supplementary:
        description: 'Supplementary tag for experimental builds; yields output tag exp_tag_supplementary'
        required: false
        default: ''
      image:
        description: 'fully-qualified URI for output Docker image'
        required: false
        default: 'us-central1-docker.pkg.dev/rubin-shared-services-71ec/sciplat/multi-test,ghcr.io/lsst-sqre/multi-test,docker.io/lsstsqre/multi-test'
      input:
        description: 'input image; you probably should change at most the tag'
        required: false
        default: 'docker.io/library/alpine:latest'

# We need actions/write if we want to do a GH App, and we need
# packages/write to push to ghcr.io with GITHUB_TOKEN
permissions:
  actions: write
  contents: read
  packages: write
  statuses: read

jobs:
  get_version:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      version: ${{ steps.calculate_version.outputs.version }}
      additional_tags: ${{ steps.get_tags.outputs.additional_tags }}
    env:
      tag: ${{ github.event.inputs.tag }}
      supplementary: ${{ github.event.inputs.supplementary }}
      image: ${{ github.event.inputs.image }}
      input: ${{ github.event.inputs.input }}

    steps:
    - name: checkout_setup
      uses: actions/checkout@v4

    - name: calculate_version
      id: calculate_version
      shell: bash
      run: |
        . scripts/functions.sh
        version=$(tag_to_version)
        echo "version=${version}" >> "${GITHUB_OUTPUT}"

    - name: get_tags
      env:
        version: ${{ steps.calculate_version.outputs.version }}
      id: get_tags
      shell: bash
      run: |
        . scripts/functions.sh
        t1=$( platform=amd64 calculate_tags )
        tt="$(echo ${t1} | sed -e 's/-amd64,/,/g' -e 's/-amd64$//g' )"
        imgs="$(echo ${tt} | tr ',' ' ')"
        alltags=""
        for i in ${imgs}; do
            t=$(echo ${i} | cut -d ':' -f 2)
            if [ -z "${alltags}" ]; then
                alltags=${t}
            else
                alltags="${alltags},${t}"
            fi
        done
        unique_tags=$( echo ${alltags} | tr ',' '\n' | sort | uniq \
                       | tr '\n' ',' | sed -e 's/,$//' )
        echo "additional_tags=${unique_tags}" >> ${GITHUB_OUTPUT}

  build:
    needs: get_version
    uses: lsst-sqre/multiplatform-build-and-push/.github/workflows/build.yaml@main
    with:
      images: ${{ github.event.inputs.image }}
      additional-tags: ${{ needs.get_version.outputs.additional_tags }}

  report:
    needs: build
    runs-on: ubuntu-latest
    env:
      built: ${{ needs.build.outputs.images }}
    steps:
    - name: report
      shell: bash
      run: |
        echo "Built images: ${built}"
